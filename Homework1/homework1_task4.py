# -*- coding: utf-8 -*-
"""homework1_task4

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vZZ51oRwZ8SZ0mzrMJg22k-BUFfiywq1
"""

# Commented out IPython magic to ensure Python compatibility.
#Task 4

# 1 Load the MNIST dataset and preprocess it.

import tensorflow as tf

# Load the MNIST dataset
(x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data()

# Preprocess the data
x_train = x_train.astype('float32') / 255.0
x_test = x_test.astype('float32') / 255.0
y_train = tf.keras.utils.to_categorical(y_train, num_classes=10)
y_test = tf.keras.utils.to_categorical(y_test, num_classes=10)

# 2 Train a simple neural network model and enable TensorBoard logging.

# Define the model
model = tf.keras.models.Sequential([
    tf.keras.layers.Flatten(input_shape=(28, 28)),
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dense(10, activation='softmax')
])

# Compile the model
model.compile(optimizer='adam',
              loss='categorical_crossentropy',
              metrics=['accuracy'])

# Enable TensorBoard logging
import datetime # Import the datetime module

log_dir = "logs/fit/" + datetime.datetime.now().strftime("%Y%m%d-%H%M%S")
tensorboard_callback = tf.keras.callbacks.TensorBoard(log_dir=log_dir, histogram_freq=1)

# Train the model
model.fit(x_train, y_train, epochs=10, callbacks=[tensorboard_callback])

# 3 Launch TensorBoard and analyze loss and accuracy trends.

# %load_ext tensorboard
# %tensorboard --logdir logs/fit