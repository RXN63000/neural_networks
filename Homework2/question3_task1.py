# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YyIVxxQdvNOZMhfWQOJ6kp23-3-EgNXK
"""

import cv2
import numpy as np
import matplotlib.pyplot as plt

# Load a grayscale image
image = cv2.imread('sample_image.jpg', cv2.IMREAD_GRAYSCALE)

# Check if the image was loaded successfully
if image is None:
    print("Error: Could not load image.")
    exit()

# Define the Sobel filters
sobel_x = np.array([[-1, 0, 1],
                    [-2, 0, 2],
                    [-1, 0, 1]], dtype=np.float32)

sobel_y = np.array([[-1, -2, -1],
                    [ 0,  0,  0],
                    [ 1,  2,  1]], dtype=np.float32)

# Apply the Sobel filters using OpenCV's filter2D function
filtered_x = cv2.filter2D(image, -1, sobel_x)
filtered_y = cv2.filter2D(image, -1, sobel_y)

# Combine the results to get the overall edge detection
filtered_combined = np.sqrt(np.square(filtered_x) + np.square(filtered_y))
filtered_combined = np.uint8(filtered_combined)

# Display the original and filtered images
plt.figure(figsize=(10, 8))

plt.subplot(2, 2, 1)
plt.imshow(image, cmap='gray')
plt.title('Original Image')
plt.axis('off')

plt.subplot(2, 2, 2)
plt.imshow(filtered_x, cmap='gray')
plt.title('Sobel X-direction')
plt.axis('off')

plt.subplot(2, 2, 3)
plt.imshow(filtered_y, cmap='gray')
plt.title('Sobel Y-direction')
plt.axis('off')

plt.subplot(2, 2, 4)
plt.imshow(filtered_combined, cmap='gray')
plt.title('Combined Edge Detection')
plt.axis('off')

plt.tight_layout()
plt.show()