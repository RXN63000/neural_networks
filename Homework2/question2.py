# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YyIVxxQdvNOZMhfWQOJ6kp23-3-EgNXK
"""

import numpy as np
import tensorflow as tf
from tensorflow.keras.layers import Conv2D
from tensorflow.keras.models import Sequential

# Define the 5x5 input matrix
input_matrix = np.array([
    [1, 2, 3, 4, 5],
    [6, 7, 8, 9, 10],
    [11, 12, 13, 14, 15],
    [16, 17, 18, 19, 20],
    [21, 22, 23, 24, 25]
])

# Define the 3x3 kernel
kernel = np.array([
    [0, 1, 0],
    [1, -4, 1],
    [0, 1, 0]
])

# Reshape the input matrix and kernel to match TensorFlow's expected format
# TensorFlow expects (batch_size, height, width, channels)
input_matrix = input_matrix.reshape(1, 5, 5, 1)  # Batch size = 1, Channels = 1
kernel = kernel.reshape(3, 3, 1, 1)  # Kernel size = 3x3, Input channels = 1, Output channels = 1

# Function to perform convolution and print the output
def perform_convolution(stride, padding):
    model = Sequential()
    model.add(Conv2D(1, kernel_size=(3, 3), strides=(stride, stride), padding=padding, input_shape=(5, 5, 1), use_bias=False))
    model.layers[0].set_weights([kernel])
    output = model.predict(input_matrix)
    print(f"Stride = {stride}, Padding = '{padding}':\n{output.squeeze()}\n")

# Perform convolution for each case
perform_convolution(stride=1, padding='valid')
perform_convolution(stride=1, padding='same')
perform_convolution(stride=2, padding='valid')
perform_convolution(stride=2, padding='same')